{"title":"MySQL面试问答总结——10个问答","uid":"32106cb4e9a46b31d6ed439ebc0a6845","slug":"MySQL面试问答总结——10个问答","date":"2024-03-28T11:59:30.000Z","updated":"2024-03-28T12:00:37.201Z","comments":true,"path":"api/articles/MySQL面试问答总结——10个问答.json","keywords":null,"cover":null,"content":"<h2 id=\"1-唯一索引比普通索引快吗，为什么\"><a href=\"#1-唯一索引比普通索引快吗，为什么\" class=\"headerlink\" title=\"1. 唯一索引比普通索引快吗，为什么\"></a>1. 唯一索引比普通索引快吗，为什么</h2><p>不一定，唯一索引还有可能慢。</p>\n<p>查询时，在没有limit 1的情况下，普通索引只比唯一索引多出一次匹配，而这一次匹配对效率的影响微乎其微。</p>\n<p>更新时，普通索引将记录放到change buffer就结束了，而唯一索引还要校验唯一性，要将数据页读入内存确定没有冲突。对于写多读少的情况，普通索引利用change buffer可以有效减少对磁盘的访问次数。</p>\n<h2 id=\"2-MySQL的组成部分及各部分用途\"><a href=\"#2-MySQL的组成部分及各部分用途\" class=\"headerlink\" title=\"2. MySQL的组成部分及各部分用途\"></a>2. MySQL的组成部分及各部分用途</h2><p>两部分，Server和存储引擎。</p>\n<p>server：</p>\n<ol>\n<li>连接器：管理连接、管理权限</li>\n<li>分析器：词法分析、语法分析</li>\n<li>优化器：执行计划生成、索引选择</li>\n<li>执行器：操作存储引擎、返回执行结果；</li>\n</ol>\n<p>存储引擎：存储数据、提供读写接口。</p>\n<h2 id=\"3-MySQL查询缓存的弊端，何时用，MySQL8对其有什么更改\"><a href=\"#3-MySQL查询缓存的弊端，何时用，MySQL8对其有什么更改\" class=\"headerlink\" title=\"3 MySQL查询缓存的弊端，何时用，MySQL8对其有什么更改\"></a>3 MySQL查询缓存的弊端，何时用，MySQL8对其有什么更改</h2><p>弊端：查询缓存失效频繁，每次表有更新查询缓存就会被清空，对于频繁更新的表来说，查询缓存不一定能起到优化作用。</p>\n<p>何时用：多用于读多写少的场景。</p>\n<p>MySQL8删除了此功能。</p>\n<h2 id=\"4-MyISAM和InonDB的区别\"><a href=\"#4-MyISAM和InonDB的区别\" class=\"headerlink\" title=\"4. MyISAM和InonDB的区别\"></a>4. MyISAM和InonDB的区别</h2><ol>\n<li>InonDB支持事务，MyISAM不支持。</li>\n<li>InonDB支持行锁，MyISAM支持表级锁。</li>\n<li>InonDB支持MVCC，MyISAM不支持。</li>\n<li>InonDB支持外键，MyISAM不支持。</li>\n<li>MyISAM支持全文检索，InonDB部分版本不支持，可用Sphinx插件。</li>\n</ol>\n<h2 id=\"5-MySQL怎么恢复半个月前的数据\"><a href=\"#5-MySQL怎么恢复半个月前的数据\" class=\"headerlink\" title=\"5. MySQL怎么恢复半个月前的数据\"></a>5. MySQL怎么恢复半个月前的数据</h2><p>整库备份+binlog，前提是要有定期备份和binlog日志</p>\n<h2 id=\"6-MySQL事务隔离级别特点及缺点\"><a href=\"#6-MySQL事务隔离级别特点及缺点\" class=\"headerlink\" title=\"6. MySQL事务隔离级别特点及缺点\"></a>6. MySQL事务隔离级别特点及缺点</h2><ol>\n<li>读未提交：一个事务还没提交，它做的修改就可以被其他事务读到。（脏读）</li>\n<li>读已提交：一个事务提交后，它做的修改才可以被其他事务读到。（非重复读：多次读取的一个记录时，若中途有更新操作，则读到的数可能不一致）</li>\n<li>可重复读：一个事务在执行过程中看到的数据和启动时看到的数据是一样的（幻读：多次读取，若有插入操作，则可能读到的数据集不一致）</li>\n<li>串行读：对于同一行记录，读写都加锁。若读写冲突，则按先后顺序执行。（性能差）</li>\n</ol>\n<h2 id=\"7-MySQL索引相关优化？\"><a href=\"#7-MySQL索引相关优化？\" class=\"headerlink\" title=\"7. MySQL索引相关优化？\"></a>7. MySQL索引相关优化？</h2><ol>\n<li>尽量使用主键查询：聚簇索引上存储了全部的数据，减少回表消耗。</li>\n<li>索引下推优化：使用联合索引，减少回表消耗。</li>\n<li>频繁查询某列数据：使用覆盖索引，避免回表。</li>\n<li>联合索引高频字段放最左边。</li>\n</ol>\n<h2 id=\"8-MySQL范式\"><a href=\"#8-MySQL范式\" class=\"headerlink\" title=\"8. MySQL范式\"></a>8. MySQL范式</h2><ol>\n<li>第一范式：每列只有一个值</li>\n<li>第二范式：每行可区分</li>\n<li>第三范式：每表不包含其他表除主键以外的信息</li>\n</ol>\n<h2 id=\"9-一千万条数据的表如何分表\"><a href=\"#9-一千万条数据的表如何分表\" class=\"headerlink\" title=\"9. 一千万条数据的表如何分表\"></a>9. 一千万条数据的表如何分表</h2><p>limit offset分页会由于数据量的庞大而变慢，在ID有序的前提下，可以配合当前页的最后一个ID，使用SELECT*FROM T WHERE id &gt; #{id} limit #{limit}。</p>\n<h2 id=\"10-订单表数据量越来越大导致查询缓慢，如何处理\"><a href=\"#10-订单表数据量越来越大导致查询缓慢，如何处理\" class=\"headerlink\" title=\"10. 订单表数据量越来越大导致查询缓慢，如何处理\"></a>10. 订单表数据量越来越大导致查询缓慢，如何处理</h2><p>分库分表。由于历史订单使用率不高，可以按年月日期分表，订单ID最好也包含日期（雪花算法），此时按照订单ID能获取订单记录，也可以按照日期查询订单。</p>\n","feature":true,"text":"1. 唯一索引比普通索引快吗，为什么不一定，唯一索引还有可能慢。 查询时，在没有limit 1的情况下，普通索引只比唯一索引多出一次匹配，而这一次匹配对效率的影...","permalink":"/post/MySQL面试问答总结——10个问答","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"八股","slug":"八股","count":3,"path":"api/tags/八股.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%94%AF%E4%B8%80%E7%B4%A2%E5%BC%95%E6%AF%94%E6%99%AE%E9%80%9A%E7%B4%A2%E5%BC%95%E5%BF%AB%E5%90%97%EF%BC%8C%E4%B8%BA%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">1. 唯一索引比普通索引快吗，为什么</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-MySQL%E7%9A%84%E7%BB%84%E6%88%90%E9%83%A8%E5%88%86%E5%8F%8A%E5%90%84%E9%83%A8%E5%88%86%E7%94%A8%E9%80%94\"><span class=\"toc-text\">2. MySQL的组成部分及各部分用途</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-MySQL%E6%9F%A5%E8%AF%A2%E7%BC%93%E5%AD%98%E7%9A%84%E5%BC%8A%E7%AB%AF%EF%BC%8C%E4%BD%95%E6%97%B6%E7%94%A8%EF%BC%8CMySQL8%E5%AF%B9%E5%85%B6%E6%9C%89%E4%BB%80%E4%B9%88%E6%9B%B4%E6%94%B9\"><span class=\"toc-text\">3 MySQL查询缓存的弊端，何时用，MySQL8对其有什么更改</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-MyISAM%E5%92%8CInonDB%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">4. MyISAM和InonDB的区别</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-MySQL%E6%80%8E%E4%B9%88%E6%81%A2%E5%A4%8D%E5%8D%8A%E4%B8%AA%E6%9C%88%E5%89%8D%E7%9A%84%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">5. MySQL怎么恢复半个月前的数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-MySQL%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB%E7%89%B9%E7%82%B9%E5%8F%8A%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">6. MySQL事务隔离级别特点及缺点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-MySQL%E7%B4%A2%E5%BC%95%E7%9B%B8%E5%85%B3%E4%BC%98%E5%8C%96%EF%BC%9F\"><span class=\"toc-text\">7. MySQL索引相关优化？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8-MySQL%E8%8C%83%E5%BC%8F\"><span class=\"toc-text\">8. MySQL范式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9-%E4%B8%80%E5%8D%83%E4%B8%87%E6%9D%A1%E6%95%B0%E6%8D%AE%E7%9A%84%E8%A1%A8%E5%A6%82%E4%BD%95%E5%88%86%E8%A1%A8\"><span class=\"toc-text\">9. 一千万条数据的表如何分表</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#10-%E8%AE%A2%E5%8D%95%E8%A1%A8%E6%95%B0%E6%8D%AE%E9%87%8F%E8%B6%8A%E6%9D%A5%E8%B6%8A%E5%A4%A7%E5%AF%BC%E8%87%B4%E6%9F%A5%E8%AF%A2%E7%BC%93%E6%85%A2%EF%BC%8C%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86\"><span class=\"toc-text\">10. 订单表数据量越来越大导致查询缓慢，如何处理</span></a></li></ol>","author":{"name":"Fausto Wu","slug":"blog-author","avatar":"https://himg.bdimg.com/sys/portrait/item/pp.1.6326f07e.mlPaRS5MgyJSkED3WMXgqA?_t=1710767464259","link":"/","description":"编程优雅化。<br>Elegant programming.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"skyTakeOut项目技术要点","uid":"b101a1acd58b1556dc0f6a106802ccd2","slug":"skyTakeOut项目技术要点","date":"2024-03-25T11:52:55.000Z","updated":"2024-03-25T11:54:24.262Z","comments":true,"path":"api/articles/skyTakeOut项目技术要点.json","keywords":null,"cover":null,"text":"1. niginx使用nginx的好处: 提高访问速度 进行负载均衡：把大量的请求按照我们指定的方式均衡党的分配给集群中的每台服务器 保证后端服务安全 ngin...","permalink":"/post/skyTakeOut项目技术要点","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"项目","slug":"项目","count":1,"path":"api/tags/项目.json"}],"author":{"name":"Fausto Wu","slug":"blog-author","avatar":"https://himg.bdimg.com/sys/portrait/item/pp.1.6326f07e.mlPaRS5MgyJSkED3WMXgqA?_t=1710767464259","link":"/","description":"编程优雅化。<br>Elegant programming.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}