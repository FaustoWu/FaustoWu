{"title":"skyTakeOut项目技术要点","uid":"b101a1acd58b1556dc0f6a106802ccd2","slug":"skyTakeOut项目技术要点","date":"2024-03-25T11:52:55.000Z","updated":"2024-03-25T11:54:24.262Z","comments":true,"path":"api/articles/skyTakeOut项目技术要点.json","keywords":null,"cover":null,"content":"<h2 id=\"1-niginx\"><a href=\"#1-niginx\" class=\"headerlink\" title=\"1. niginx\"></a>1. niginx</h2><h3 id=\"使用nginx的好处\"><a href=\"#使用nginx的好处\" class=\"headerlink\" title=\"使用nginx的好处:\"></a>使用nginx的好处:</h3><ol>\n<li>提高访问速度</li>\n<li>进行负载均衡：把大量的请求按照我们指定的方式均衡党的分配给集群中的每台服务器</li>\n<li>保证后端服务安全</li>\n</ol>\n<h3 id=\"nginx反向代理的配置方式\"><a href=\"#nginx反向代理的配置方式\" class=\"headerlink\" title=\"nginx反向代理的配置方式\"></a>nginx反向代理的配置方式</h3><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#nginx.conf</span></span><br><span class=\"line\">server&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">server_name</span> localhost;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"section\">location</span>/api/&#123;</span><br><span class=\"line\">\t\t<span class=\"attribute\">proxy_pass</span> http://localhost:8080/admin/;<span class=\"comment\">#反向代理</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"nginx负载均衡的配置方式\"><a href=\"#nginx负载均衡的配置方式\" class=\"headerlink\" title=\"nginx负载均衡的配置方式\"></a>nginx负载均衡的配置方式</h3><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#nginx.conf</span></span><br><span class=\"line\"><span class=\"section\">upstream</span> webservers&#123;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.100.128:8080</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server</span> <span class=\"number\">192.168.100.129:8080</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">server&#123;</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> localhost;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"section\">location</span>/api/&#123;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> http://webservers/admin/;<span class=\"comment\">#负载均衡</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"nginx负载均衡策略\"><a href=\"#nginx负载均衡策略\" class=\"headerlink\" title=\"nginx负载均衡策略\"></a>nginx负载均衡策略</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">轮询：默认</span><br><span class=\"line\"></span><br><span class=\"line\">weight：依据权重</span><br><span class=\"line\"></span><br><span class=\"line\">ip_hash：依据ip</span><br><span class=\"line\"></span><br><span class=\"line\">least_conn：依据最少链接</span><br><span class=\"line\"></span><br><span class=\"line\">url_hash：依据url分配</span><br><span class=\"line\"></span><br><span class=\"line\">fair：依据响应时间</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-密码加密\"><a href=\"#2-密码加密\" class=\"headerlink\" title=\"2. 密码加密\"></a>2. 密码加密</h2><p>使用MD5加密方式对明文密码加密（不可逆）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//进行md5加密，然后进行比对</span></span><br><span class=\"line\">password=DigestUtils.md5DisgestAsHex(password.getBytes());</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!password.equals(employee.getPassword()))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">PasswordErrorException</span>(MessageConstant.PASSWORD_ERROR);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-YAPI接口管理平台\"><a href=\"#3-YAPI接口管理平台\" class=\"headerlink\" title=\"3. YAPI接口管理平台\"></a>3. YAPI接口管理平台</h2><h2 id=\"4-Swagger——Knife4j\"><a href=\"#4-Swagger——Knife4j\" class=\"headerlink\" title=\"4. Swagger——Knife4j\"></a>4. Swagger——Knife4j</h2><p>Knife4j是Java MVC框架集成Swagger生成Api文档的增强解决方案。在线生成接口文档、在线测试接口。</p>\n<h3 id=\"使用步骤\"><a href=\"#使用步骤\" class=\"headerlink\" title=\"使用步骤\"></a>使用步骤</h3><ol>\n<li>导入Knife4j的maven坐标：</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//pom.xml</span></span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">\t&lt;groupId&gt;com.github.xiaoymin&lt;/groupId&gt;</span><br><span class=\"line\">\t&lt;artifactId&gt;knifed-spring-boot-starter&lt;/artactId&gt;</span><br><span class=\"line\">\t&lt;version&gt;<span class=\"number\">3.0</span><span class=\"number\">.2</span>&lt;/version&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>…\\config\\WebMvcConfiguration&#x2F; 配置类中加入knife4j相关配置：</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> Docket <span class=\"title function_\">docket</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">Apilnfo</span> <span class=\"variable\">apilnfo</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ApilnfoBuilder</span>()</span><br><span class=\"line\">        .title(<span class=\"string\">&quot;苍穹外卖项自接口文档&quot;</span>)</span><br><span class=\"line\">        .version(<span class=\"string\">&quot;2.0&quot;</span>)</span><br><span class=\"line\">        .description(<span class=\"string\">&quot;苍穹外卖项目接口文档&quot;</span>)</span><br><span class=\"line\">        .build();</span><br><span class=\"line\">    <span class=\"type\">Docket</span> <span class=\"variable\">docket</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Docket</span>(DocumentationType.SWAGGER_2)</span><br><span class=\"line\">        .apilnfo(apilnfo)</span><br><span class=\"line\">        .select()</span><br><span class=\"line\">        <span class=\"comment\">//指定生成接口需要扫描的包</span></span><br><span class=\"line\">        .apis(RequestHandlerSelectors.basePackage(<span class=\"string\">&quot;com.sky.controller&quot;</span>))</span><br><span class=\"line\">        .paths(PathSelectors.any())</span><br><span class=\"line\">        .build();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> docket;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>…\\config\\WebMvcConfiguration&#x2F; 配置类中 设置静态资源映射，否则接口文档页面无法访问：</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 设置静态资源映射</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> registry</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addResourceHandlers</span><span class=\"params\">(ResourceHandlerRegistry registry)</span>&#123;</span><br><span class=\"line\">    log.info(<span class=\"string\">&quot;开始设置静态资源映射...&quot;</span>);</span><br><span class=\"line\">    registry.addResourceHandler(<span class=\"string\">&quot;/doc.html&quot;</span>).addResourceLocations(<span class=\"string\">&quot;classpath:/META-INFIresources&quot;</span>);</span><br><span class=\"line\">    registry.addResourceHandler(<span class=\"string\">&quot;/webjars/&quot;</span>).addResourceLocations(<span class=\"string\">&quot;classpath:/META-INF/resources/webjars&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"常用注解\"><a href=\"#常用注解\" class=\"headerlink\" title=\"常用注解\"></a>常用注解</h3><p>用于增加接口文档可读性</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Api(tag=&quot;员工相关接口&quot;)</span></span><br><span class=\"line\">用在类上，例如Controller，表示对类的说明</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@ApiModel(description=&quot;员工登陆时传递的数据模型&quot;)</span></span><br><span class=\"line\">用在类上，例如entity、DTO、vo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@ApiModelProperty(&quot;用户名&quot;)</span></span><br><span class=\"line\">用在属性上，描述属性信息</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@ApiOperation</span>（value=<span class=\"string\">&quot;员工登录&quot;</span>）</span><br><span class=\"line\">用在方法上，例如Controller的方法，说明方法的用途、作用</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-添加员工功能模块\"><a href=\"#5-添加员工功能模块\" class=\"headerlink\" title=\"5. 添加员工功能模块\"></a>5. 添加员工功能模块</h2><p>在控制类EmployeeController中</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@PostMapping</span></span><br><span class=\"line\"><span class=\"meta\">@ApiOperation(&quot;新增员工&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> Result <span class=\"title function_\">save</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> EmployeeDTO employeeDto)</span>&#123;</span><br><span class=\"line\">    Log.info(<span class=\"string\">&quot;新增员工：&#123;&#125;&quot;</span>,employeeDTO);</span><br><span class=\"line\">    employeeService.save(employeeDTO);</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> Result.sucess();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在service接口中声明方法，在lmpl中实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">save</span><span class=\"params\">(EmployeeDTO employeeDTO)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//在持久层中要用实体，所以要把封装DTO转换为实体</span></span><br><span class=\"line\">\t<span class=\"type\">Employee</span> <span class=\"variable\">employee</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Employee</span>();</span><br><span class=\"line\">\tBeanUtils.copyPropertie(employeeDTO,employee);<span class=\"comment\">//属性名一致就可以使用对象属性拷贝</span></span><br><span class=\"line\">    <span class=\"comment\">//设置账号状态</span></span><br><span class=\"line\">    employee.setStatus(StatusConstant.ENABLE);</span><br><span class=\"line\">    <span class=\"comment\">//设置密码,默认123456</span></span><br><span class=\"line\">\temployee.setPassword(DisgestUtils.md5DigestAsHex(PasswordConstant.DEFAULT_PASSWORD.getBytes()));</span><br><span class=\"line\">    <span class=\"comment\">//设置当前记录的创建时间和修改时间</span></span><br><span class=\"line\">    employee.setCreateTime(LocalDateTime.now());</span><br><span class=\"line\">    employee.updateCreateTime(LocalDateTime.now());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//TODO 后期需要修改为当前登录用户的ID</span></span><br><span class=\"line\">    employee.setCreateUser(<span class=\"number\">10L</span>);</span><br><span class=\"line\">    employee.updateCreateUser(<span class=\"number\">10L</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    employereeMapper.insert(employee);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>持久层EmployeeMapper中（要在配置文件中开启MyBatis的驼峰命名）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Insert(&quot;insert into employee(...) values (#&#123;name&#125;,#&#123;username&#125;,...)&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">insert</span><span class=\"params\">(Employee employee)</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"捕获sql中重复添加唯一属性字段的异常\"><a href=\"#捕获sql中重复添加唯一属性字段的异常\" class=\"headerlink\" title=\"捕获sql中重复添加唯一属性字段的异常\"></a>捕获sql中重复添加唯一属性字段的异常</h3><p>在GlobalExceptionHandler中</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> Result <span class=\"title function_\">excetionHandler</span><span class=\"params\">(SQLIntegrityConstraintViolationException ex)</span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">String</span> <span class=\"variable\">message</span> <span class=\"operator\">=</span> ex.getMessage();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(message.contains(<span class=\"string\">&quot;Duplicate entry&quot;</span>))&#123;</span><br><span class=\"line\">        String[] split = message.split(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> split[<span class=\"number\">2</span>];</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">msg</span> <span class=\"operator\">=</span> username + MessageConstant.ALREADY_EXISTS;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Result.error(msg);</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Result.error(MessageConstant.UNKNOWN_ERROR);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解析JWT令牌存到ThreadLocal中\"><a href=\"#解析JWT令牌存到ThreadLocal中\" class=\"headerlink\" title=\"解析JWT令牌存到ThreadLocal中\"></a>解析JWT令牌存到ThreadLocal中</h3><p>JWT解析出员工ID后如何传递给Service的save方法？利用ThreadLocal存储空间。</p>\n<p>ThreadLocal不是线程，是线程的局部变量，用于线程隔离，线程内才能读取。</p>\n<p>在context\\BaseContext中</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ThreadLocal&lt;<span class=\"type\">long</span>&gt; threadLocal = <span class=\"keyword\">new</span> <span class=\"title class_\">ThreadLocal</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setCurrentId</span><span class=\"params\">(Long id)</span>&#123;</span><br><span class=\"line\">\tthreadLocal.set(id);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Long <span class=\"title function_\">getCurrentId</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> threadLocal.get();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">removeCurrentId</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">\tthreadLocal.remove();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在拦截器JwtTokenAdminInterceptor中</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.从请求头中获取令牌</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">token</span> <span class=\"operator\">=</span> request.getHeader(jwtProperies.getAdminTokenName());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.校验令牌</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">    Log.info(<span class=\"string\">&quot;jwt校验：&#123;&#125;&quot;</span>,token);</span><br><span class=\"line\">    <span class=\"type\">Claims</span> <span class=\"variable\">claims</span> <span class=\"operator\">=</span> JwtUtil.parseJWT(jwtProperties.getAdminSecretKey().token);</span><br><span class=\"line\">    <span class=\"type\">Long</span> <span class=\"variable\">empId</span> <span class=\"operator\">=</span> <span class=\"type\">long</span>.valueOf(clains.get(JWTClaimsConstant.EMP_ID).toString());</span><br><span class=\"line\">    Log.info(<span class=\"string\">&quot;当前员工Id&quot;</span>,empId);</span><br><span class=\"line\">    BaseContext.setCurrentId(empId);</span><br><span class=\"line\">    <span class=\"comment\">//3.通过放行</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ture</span><br><span class=\"line\">&#125;<span class=\"keyword\">catch</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//4.不通过，响应401状态码</span></span><br><span class=\"line\">    response.setStatus(<span class=\"number\">401</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在service中修改</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//设置当前记录创建人和修改人ID</span><br><span class=\"line\">    employee.setCreateUser(BaseContext.getCurrentId());</span><br><span class=\"line\">    employee.updateCreateUser(BaseContext.getCurrentId());</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"6-分页查询功能实现\"><a href=\"#6-分页查询功能实现\" class=\"headerlink\" title=\"6. 分页查询功能实现\"></a>6. 分页查询功能实现</h2><p>在控制类EmployeeController中</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@GetMapping(&quot;/page&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@ApiOperation(&quot;员工分页查询&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> Result&lt;PageResult&gt; <span class=\"title function_\">page</span><span class=\"params\">(EmployeePageQueryDTO employePageQueryDTO)</span>&#123;</span><br><span class=\"line\">    log.info(<span class=\"string\">&quot;员工分页查询，参数为：&#123;&#125;&quot;</span>,employePageQueryDTO)</span><br><span class=\"line\">        <span class=\"type\">PageResult</span> <span class=\"variable\">pageResult</span> <span class=\"operator\">=</span> employeeService.pageQuery(employePageQueryDTO);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> Result.sucess(pageResult);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在配置文件中导入pagehelper的maven坐标。</p>\n<p><u><em>pagehelper底层是基于mybatis的拦截器实现的。</em></u></p>\n<p>在service中</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> PageResult <span class=\"title function_\">pageQuery</span><span class=\"params\">(EmployeePageQueryDTO employePageQueryDTO)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//select * from employee limit 0,10</span></span><br><span class=\"line\">\tPageHelper.startPage(employePageQueryDTO.getPage(),employePageQueryDTO.getPageSize());</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n","feature":true,"text":"1. niginx使用nginx的好处: 提高访问速度 进行负载均衡：把大量的请求按照我们指定的方式均衡党的分配给集群中的每台服务器 保证后端服务安全 ngin...","permalink":"/post/skyTakeOut项目技术要点","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"项目","slug":"项目","count":1,"path":"api/tags/项目.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-niginx\"><span class=\"toc-text\">1. niginx</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8nginx%E7%9A%84%E5%A5%BD%E5%A4%84\"><span class=\"toc-text\">使用nginx的好处:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">nginx反向代理的配置方式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">nginx负载均衡的配置方式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%AD%96%E7%95%A5\"><span class=\"toc-text\">nginx负载均衡策略</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%AF%86%E7%A0%81%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">2. 密码加密</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-YAPI%E6%8E%A5%E5%8F%A3%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0\"><span class=\"toc-text\">3. YAPI接口管理平台</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-Swagger%E2%80%94%E2%80%94Knife4j\"><span class=\"toc-text\">4. Swagger——Knife4j</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">使用步骤</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3\"><span class=\"toc-text\">常用注解</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E6%B7%BB%E5%8A%A0%E5%91%98%E5%B7%A5%E5%8A%9F%E8%83%BD%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">5. 添加员工功能模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8D%95%E8%8E%B7sql%E4%B8%AD%E9%87%8D%E5%A4%8D%E6%B7%BB%E5%8A%A0%E5%94%AF%E4%B8%80%E5%B1%9E%E6%80%A7%E5%AD%97%E6%AE%B5%E7%9A%84%E5%BC%82%E5%B8%B8\"><span class=\"toc-text\">捕获sql中重复添加唯一属性字段的异常</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%9E%90JWT%E4%BB%A4%E7%89%8C%E5%AD%98%E5%88%B0ThreadLocal%E4%B8%AD\"><span class=\"toc-text\">解析JWT令牌存到ThreadLocal中</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">6. 分页查询功能实现</span></a></li></ol>","author":{"name":"Fausto Wu","slug":"blog-author","avatar":"https://himg.bdimg.com/sys/portrait/item/pp.1.6326f07e.mlPaRS5MgyJSkED3WMXgqA?_t=1710767464259","link":"/","description":"编程优雅化。<br>Elegant programming.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"MySQL面试问答总结——10个问答","uid":"32106cb4e9a46b31d6ed439ebc0a6845","slug":"MySQL面试问答总结——10个问答","date":"2024-03-28T11:59:30.000Z","updated":"2024-03-28T12:00:37.201Z","comments":true,"path":"api/articles/MySQL面试问答总结——10个问答.json","keywords":null,"cover":null,"text":"1. 唯一索引比普通索引快吗，为什么不一定，唯一索引还有可能慢。 查询时，在没有limit 1的情况下，普通索引只比唯一索引多出一次匹配，而这一次匹配对效率的影...","permalink":"/post/MySQL面试问答总结——10个问答","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"八股","slug":"八股","count":3,"path":"api/tags/八股.json"}],"author":{"name":"Fausto Wu","slug":"blog-author","avatar":"https://himg.bdimg.com/sys/portrait/item/pp.1.6326f07e.mlPaRS5MgyJSkED3WMXgqA?_t=1710767464259","link":"/","description":"编程优雅化。<br>Elegant programming.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"企业生产SaaS项目技术实现细节","uid":"e16c05f5e231a1a803fb1bd949e0f188","slug":"企业生产SaaS项目技术实现细节","date":"2024-03-25T11:47:27.000Z","updated":"2024-03-25T11:52:39.123Z","comments":true,"path":"api/articles/企业生产SaaS项目技术实现细节.json","keywords":null,"cover":null,"text":"一、关于数据源切换 问：在项目中，如何实现企业数据源的动态切换？ 答：为了实现企业数据源的动态切换，我们采用了Hibernate与ThreadLocal的结合。...","permalink":"/post/企业生产SaaS项目技术实现细节","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"面经","slug":"面经","count":1,"path":"api/tags/面经.json"}],"author":{"name":"Fausto Wu","slug":"blog-author","avatar":"https://himg.bdimg.com/sys/portrait/item/pp.1.6326f07e.mlPaRS5MgyJSkED3WMXgqA?_t=1710767464259","link":"/","description":"编程优雅化。<br>Elegant programming.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}